#!/usr/bin/env node

var kanso = require('../lib/kanso'),
    settings = require('../lib/settings'),
    couchdb = require('../lib/couchdb'),
    utils = require('../lib/utils'),
    logger = require('../lib/logger');


var args = process.argv.slice(2);

for (var i = 0; i < args.length; i += 1) {
    if (args[i] === '--debug') {
        args.splice(i, 1);
        logger.level = 'debug';
    }
}


function usage() {
    console.log('Usage: kanso COMMAND [ARGS]');
    console.log('');
    console.log('Available commands:');
    console.log('  push    Upload a project to a CouchDB instance');
    console.log('  show    Load a project and output resulting JSON');
    logger.clean_exit = true;
}

if (!args.length) {
    usage();
}
else {
    switch (args[0]) {
    case 'show':
        var dir = args[1] || '.';
        settings.load(dir, function (err, settings) {
            if (err) {
                return logger.error(err);
            }
            kanso.load(dir, settings, function (err, doc) {
                if (err) {
                    return logger.error(err);
                }
                // output to console (not a log entry, actual output)
                console.log(JSON.stringify(doc, null, 4));
                logger.clean_exit = true;
            });
        });
        break;
    case 'push':
        if (!args[1]) {
            return logger.error('No CouchDB URL specified');
        }
        var dir = args[2] || '.';
        settings.load(dir, function (err, settings) {
            if (err) {
                return logger.error(err);
            }
            kanso.load(dir, settings, function (err, doc) {
                var url = args[1].replace(/\/$/, '');
                var db = couchdb(url);
                db.ensureDB(function (err) {
                    if (err) {
                        return logger.error(err);
                    }
                    var id = '_design/' + settings.name;
                    db.save(id, doc, {force: true}, function (err) {
                        if (err) {
                            return logger.error(err);
                        }
                        else {
                            logger.end(
                                url + '/_design/' +
                                settings.name + '/_rewrite/'
                            );
                        }
                    });
                });
            });
        });
        break;
    case 'create':
        var dir = args[1];
        kanso.create(dir, function (err) {
            if (err) {
                return logger.error(err);
            }
            logger.end(utils.abspath(dir));
        });
        break;
    default:
        usage();
        logger.clean_exit = true;
    }
}
